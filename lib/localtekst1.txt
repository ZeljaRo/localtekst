=== C:/Users/Korisnik/Documents/projekti/localtekst/lib/maindart ===
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';

import 'features/folder_picker/screens/folder_selector_screen.dart';
import 'features/internal/screens/internal_file_list_screen.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Permission.manageExternalStorage.request();
  await Permission.storage.request();

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'SAF TXT Viewer',
      theme: ThemeData(
        useMaterial3: true,
        colorSchemeSeed: Colors.blue,
      ),
      home: const HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  void _openFolderSelector(BuildContext context) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => const FolderSelectorScreen(),
      ),
    );
  }

  void _openInternalList(BuildContext context) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => const InternalFileListScreen(),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('SAF TXT Viewer')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () => _openFolderSelector(context),
              child: const Text('Odaberi mapu i kopiraj'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () => _openInternalList(context),
              child: const Text('Pregled internih fajlova'),
            ),
          ],
        ),
      ),
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/localtekst/lib/features/folder_picker/screens/folder_selector_screendart ===
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:file_selector/file_selector.dart';
import 'package:path_provider/path_provider.dart';

class FolderSelectorScreen extends StatefulWidget {
  const FolderSelectorScreen({super.key});

  @override
  State<FolderSelectorScreen> createState() => _FolderSelectorScreenState();
}

class _FolderSelectorScreenState extends State<FolderSelectorScreen> {
  List<XFile> _files = [];

  Future<void> _selectFolderAndListFiles() async {
    final directory = await getDirectoryPath();
    if (directory == null) return;

    final folder = Directory(directory);
    final allFiles = folder.listSync();
    final txtFiles = allFiles
        .where((f) =>
            f is File &&
            f.path.toLowerCase().endsWith('.txt'))
        .map((f) => XFile(f.path))
        .toList();

    setState(() {
      _files = txtFiles;
    });
  }

  Future<void> _copySelectedFiles(List<XFile> selectedFiles) async {
    final targetDir = await getApplicationDocumentsDirectory();
    for (final file in selectedFiles) {
      final fileName = file.name;
      final newPath = '${targetDir.path}/$fileName';
      await File(file.path).copy(newPath);
      debugPrint('[KOPIRANO] ${file.path} -> $newPath');
    }
    if (mounted) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Fajlovi kopirani.')),
      );
    }
  }

  final Set<XFile> _selected = {};

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Odaberite mapu'),
        actions: [
          IconButton(
            icon: const Icon(Icons.folder_open),
            onPressed: _selectFolderAndListFiles,
          ),
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              itemCount: _files.length,
              itemBuilder: (context, index) {
                final file = _files[index];
                final selected = _selected.contains(file);
                return CheckboxListTile(
                  title: Text(file.name),
                  value: selected,
                  onChanged: (value) {
                    setState(() {
                      if (value == true) {
                        _selected.add(file);
                      } else {
                        _selected.remove(file);
                      }
                    });
                  },
                );
              },
            ),
          ),
          if (_files.isNotEmpty)
            Padding(
              padding: const EdgeInsets.all(12.0),
              child: Row(
                children: [
                  ElevatedButton(
                    onPressed: () => _copySelectedFiles(_files),
                    child: const Text('Kopiraj sve'),
                  ),
                  const SizedBox(width: 12),
                  ElevatedButton(
                    onPressed: () => _copySelectedFiles(_selected.toList()),
                    child: const Text('Kopiraj oznaÄŤene'),
                  ),
                ],
              ),
            ),
        ],
      ),
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/localtekst/lib/features/internal/screens/internal_file_list_screendart ===
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';

class InternalFileListScreen extends StatefulWidget {
  const InternalFileListScreen({super.key});

  @override
  State<InternalFileListScreen> createState() => _InternalFileListScreenState();
}

class _InternalFileListScreenState extends State<InternalFileListScreen> {
  List<FileSystemEntity> txtFiles = [];

  @override
  void initState() {
    super.initState();
    _loadInternalTxtFiles();
  }

  Future<void> _loadInternalTxtFiles() async {
    final dir = await getApplicationDocumentsDirectory();
    final files = dir.listSync().where((file) {
      return file.path.toLowerCase().endsWith('.txt');
    }).toList();

    setState(() {
      txtFiles = files;
    });
  }

  Future<String> _readFileContent(File file) async {
    return await file.readAsString();
  }

  void _showContentDialog(File file) async {
    final content = await _readFileContent(file);

    if (!context.mounted) return;

    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: Text(file.uri.pathSegments.last),
        content: SingleChildScrollView(child: Text(content)),
        actions: [
          TextButton(
            child: const Text('Zatvori'),
            onPressed: () => Navigator.of(context).pop(),
          )
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Interni TXT fajlovi')),
      body: ListView.builder(
        itemCount: txtFiles.length,
        itemBuilder: (context, index) {
          final file = txtFiles[index];
          final fileName = file.uri.pathSegments.last;

          return ListTile(
            title: Text(fileName),
            onTap: () => _showContentDialog(File(file.path)),
          );
        },
      ),
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/localtekst/lib/features/internal_file/screens/internal_file_list_screendart ===
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:localtekst/features/internal_file/screens/song_text_screen.dart';

class InternalFileListScreen extends StatelessWidget {
  final List<FileSystemEntity> files;

  const InternalFileListScreen({Key? key, required this.files}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final txtFiles = files.where((file) => file.path.toLowerCase().endsWith('.txt')).toList();

    return Scaffold(
      appBar: AppBar(
        title: const Text('Interni TXT fajlovi'),
      ),
      body: ListView.builder(
        itemCount: txtFiles.length,
        itemBuilder: (context, index) {
          final file = txtFiles[index];
          final fileName = file.path.split(Platform.pathSeparator).last;

          return ListTile(
            title: Text(fileName),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => SongTextScreen(
                    filePath: file.path,
                    allFiles: txtFiles,
                    currentIndex: index,
                  ),
                ),
              );
            },
          );
        },
      ),
    );
  }
}



=== C:/Users/Korisnik/Documents/projekti/localtekst/lib/features/internal_file/screens/song_text_screendart ===
import 'package:flutter/material.dart';
import 'dart:io';

class SongTextScreen extends StatefulWidget {
  final List<File> files;
  final int initialIndex;

  const SongTextScreen({
    Key? key,
    required this.files,
    required this.initialIndex,
  }) : super(key: key);

  @override
  State<SongTextScreen> createState() => _SongTextScreenState();
}

class _SongTextScreenState extends State<SongTextScreen> {
  late int currentIndex;
  late String currentText;

  @override
  void initState() {
    super.initState();
    currentIndex = widget.initialIndex;
    _loadText();
  }

  void _loadText() async {
    final file = widget.files[currentIndex];
    final content = await file.readAsString();
    setState(() {
      currentText = content;
    });
  }

  void _goToPrevious() {
    if (currentIndex > 0) {
      setState(() {
        currentIndex--;
        currentText = '';
      });
      _loadText();
    }
  }

  void _goToNext() {
    if (currentIndex < widget.files.length - 1) {
      setState(() {
        currentIndex++;
        currentText = '';
      });
      _loadText();
    }
  }

  @override
  Widget build(BuildContext context) {
    final fileName = widget.files[currentIndex].path.split(Platform.pathSeparator).last;

    return Scaffold(
      appBar: AppBar(
        title: Text(fileName, style: const TextStyle(fontSize: 16)),
        actions: [
          IconButton(
            icon: const Icon(Icons.info_outline),
            onPressed: () {
              // Primjer nerefreshabilne akcije
            },
          ),
        ],
      ),
      body: Column(
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              IconButton(
                icon: const Icon(Icons.arrow_back),
                onPressed: _goToPrevious,
              ),
              IconButton(
                icon: const Icon(Icons.arrow_forward),
                onPressed: _goToNext,
              ),
            ],
          ),
          Expanded(
            child: SingleChildScrollView(
              padding: const EdgeInsets.all(16),
              child: SelectableText(
                currentText,
                style: const TextStyle(fontSize: 18),
              ),
            ),
          ),
        ],
      ),
    );
  }
}



